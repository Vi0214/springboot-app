pipeline {
    agent any
    
    environment {
        registry = "975513479057.dkr.ecr.us-east-1.amazonaws.com/myrepo-virginia"
    }

    stages {
        stage('git checkout') {
            steps {
                 checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/Vi0214/springboot-app.git']]])
            }
        }
        stage('Build') {
            steps{
                sh "mvn clean install"
                
            }
        
        }
        stage('Build image') {
            steps {
                script {
                    docker.build registry
                }
            }
        }
        stage('Push to ECR') {
            steps {
                sh "aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 975513479057.dkr.ecr.us-east-1.amazonaws.com"
                sh "docker tag myrepo-virginia:latest 975513479057.dkr.ecr.us-east-1.amazonaws.com/myrepo-virginia:1.1.1"
                sh "docker push 975513479057.dkr.ecr.us-east-1.amazonaws.com/myrepo-virginia:1.1.1" 
            }
        }
        stage('Deploy to EKS') {
            steps {
                withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'Kube_config', namespace: '', serverUrl: '') {
                sh "kubectl apply -f eks-deploy-k8s.yaml"
              }
            }
        }
    }
}
